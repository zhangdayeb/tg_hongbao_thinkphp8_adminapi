<?php
namespace app\home\controller\user;

use app\BaseController;

use app\common\model\TouziQianDao;
use app\common\model\User as models;

use app\common\traites\PublicCrudTrait;

use think\exception\ValidateException;
use think\facade\Db;
use hg\apidoc\annotation as Apidoc;

/**
 *
 * @Apidoc\Title("个人中心")
 * */
class QianDao extends BaseController
{
    use PublicCrudTrait;

    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
    }

    /**
     * @Apidoc\Title("签到 记录")
     * @Apidoc\Method("POST")
     * @Apidoc\Param("page", type="string",require=true, desc="页面")
     * @Apidoc\Param("limit", type="string",require=true, desc="分页限制")
     * @Apidoc\Param("start", type="string",require=true, desc="开始时间 可以不写")
     * @Apidoc\Param("end", type="string",require=true, desc="结束时间 可以不写")
     * @Apidoc\Returned("data", type="array", desc="返回数据")
     */
    public function qiandao_records(){
        $uid= session('home_user.id');
        //过滤数据
        // $postField = 'page,limit,start,end';
        // $post   = $this->request->only(explode(',', $postField), 'post', null);

        $page = $this->request->post('page', 1);//当前页
        $limit = $this->request->post('limit', 50);//每页显示数量
        $start = $this->request->post('start'); // 搜索开始时间
        $end = $this->request->post('end'); // 搜索结束时间
        $date = [];
        if(!empty($start) && !empty($end)){
            $date['start'] = $start;
            $date['end'] = $end;
        }

        $map = [];
        $map['user_id']= $uid;
        $res=(new TouziQianDao())->page_list($map,$limit,$page,$date);
        return show($res);
    }

    /**
     * @Apidoc\Title("签到")
     * @Apidoc\Method("GET")
     */
    public function qiandao() {
        $user = session('home_user');
        $uid = session('home_user.id');
        $vip_grade = session('home_user.vip_grade');
        Db::startTrans();
        try {
            //检测今天是否已经签到
            $res_day = TouziQianDao::signinCheck($uid);
            if ($res_day > 0) {
                return show([], config('ToConfig.http_code.error'), '你已签到，请明天再来');
            }

            TouziQianDao::create(['user_id' => $uid, 'create_time' => date('Y-m-d')]);

            if($vip_grade ==0){
                $draw_times = getSystemConfig('choujiang_times_by_qiandao');
                $money_juanzeng = 20000;
            }else{
                $draw_times = getSystemConfig('choujiang_times_by_qiandao_vip');
                $money_juanzeng = 20000;
            }
            //写入记录
            $times = [
                'user_id' => $uid,
                'send_times' => $draw_times,
                'create_time' => date('Y-m-d H:i:s'),
                'mark' => '签到赠送抽奖次数',
            ];
            TouziLotteryTimes::create($times);

            //增加抽奖次数
            User::increaseBy('choujiang_times', $uid, $draw_times);
            // 增加共富金
            User::increaseBy('money_juanzeng', $uid, $money_juanzeng);
            MoneyLog::flowing(1, 1, 1, 301, $user, $money_juanzeng, 0, '签到送共富爱心值', 'money_juanzeng');
            // 增加2元 公益金
            User::increaseBy('money_balance', $uid, 2);
            MoneyLog::flowing(1, 1, 1, 301, $user, 2, 0, '签到送现金', 'money_balance');

            Db::commit();

            // 检测连续抽奖次数
            $days_lianxu = $this->getLianXuDays($uid);
            (new User())->where(['id'=>$uid])->update(['qiandao_lianxu'=>$days_lianxu]);
            $this->fristTimesGetDaysLianxu($uid,$days_lianxu);

            return show([], config('ToConfig.http_code.success'), '签到成功');
        } catch (ValidateException $e) {
            Db::rollback();
            // 验证失败 输出错误信息
            return show([], config('ToConfig.http_code.error'), $e->getError());
        }
    }

    protected function getLianXuDays($uid){
        $days = 0;
        for($i = 0; $i <= 30; $i++){
            $temp_date = date("Y-m-d",(time() - ($i * 24 * 60 *60)));
            $isFind = (new TouziQianDao)->where(['user_id'=>$uid,'create_time'=>$temp_date])->find();
            if($isFind){
                $days++;
            }else{
                break;
            }
        }
        return $days;
    }

    protected function fristTimesGetDaysLianxu($uid,$days_lianxu){
        $userInfo = (new User())->where(['id'=>$uid])->find();
        $lingqu = is_null($userInfo['qiandao_lingqu'])?[]:unserialize($userInfo['qiandao_lingqu']);
        $vip_grade = $userInfo['vip_grade'];
        // 如果没有
        if(count($lingqu) ==0){
            $lingqu['7'] = 0;
            $lingqu['14'] = 0;
            $lingqu['21'] = 0;
            $lingqu['30'] = 0;

            $data_update = [];
            $data_update['qiandao_lingqu'] = serialize($lingqu);
            (new User())->where(['id'=>$uid])->update($data_update);
        }
        $is_jiedian = 0;
        // 普通用户
        if($vip_grade == 0){
            if($lingqu['7'] != 1 && $days_lianxu == 7){
                $is_jiedian = 1;
                $lingqu['7'] = 1;
                $draw_times = 1;
                $add_money_gongfu = 30000;
            }
            if($lingqu['14'] != 1 && $days_lianxu == 14){
                $is_jiedian = 1;
                $lingqu['14'] = 1;
                $draw_times = 2;
                $add_money_gongfu = 60000;
            }
            if($lingqu['21'] != 1 && $days_lianxu == 21){
                $is_jiedian = 1;
                $lingqu['21'] = 1;
                $draw_times = 3;
                $add_money_gongfu = 100000;
            }
            if($lingqu['30'] != 1 && $days_lianxu == 30){
                $is_jiedian = 1;
                $lingqu['30'] = 1;
                $draw_times = 4;
                $add_money_gongfu = 200000;
            }
        }

        // 会员用户
        if($vip_grade == 1){
            if($lingqu['7'] != 1 && $days_lianxu == 7){
                $is_jiedian = 1;
                $lingqu['7'] = 1;
                $draw_times = 3;
                $add_money_gongfu = 50000;
            }
            if($lingqu['14'] != 1 && $days_lianxu == 14){
                $is_jiedian = 1;
                $lingqu['14'] = 1;
                $draw_times = 5;
                $add_money_gongfu = 120000;
            }
            if($lingqu['21'] != 1 && $days_lianxu == 21){
                $is_jiedian = 1;
                $lingqu['21'] = 1;
                $draw_times = 7;
                $add_money_gongfu = 250000;
            }
            if($lingqu['30'] != 1 && $days_lianxu == 30){
                $is_jiedian = 1;
                $lingqu['30'] = 1;
                $draw_times = 9;
                $add_money_gongfu = 500000;
            }
        }

        if($is_jiedian ==1){
            //写入记录
            $times = [
                'user_id' => $uid,
                'send_times' => $draw_times,
                'create_time' => date('Y-m-d H:i:s'),
                'mark' => '签到节点特别赠送抽奖次数',
            ];
            TouziLotteryTimes::create($times);
            //增加抽奖次数
            User::increaseBy('choujiang_times', $uid, $draw_times);
            //增加 共富基金
            User::increaseBy('money_juanzeng', $uid, $add_money_gongfu);
            // 写入日志
            MoneyLog::flowing(1, 1, 1, 103, $userInfo, $add_money_gongfu, 90999, '用户抽奖几天那种[' . money_type_name('money_juanzeng') . ']:', 'money_juanzeng');
           
            $data_update = [];
            $data_update['qiandao_lingqu'] = serialize($lingqu);
            (new User())->where(['id'=>$uid])->update($data_update);
        }
    }

// 类结束了
}
